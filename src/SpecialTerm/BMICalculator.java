/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package SpecialTerm;

import javax.swing.*;
import java.awt.Color;
        
/**
 *
 * Created by Jacob Laurel
 */
public class BMICalculator extends javax.swing.JFrame {

    /**
     * Creates new form BMICalculator
     */
    public BMICalculator() {
        initComponents();
        
        jTextArea.setText("\n\nYour BMI is: ");
        
        jComboHeight.addItem("--- Measurement Unit ---");
        jComboHeight.addItem("Feet + Inches");
        jComboHeight.addItem("Centimeters");
        jComboHeight.addItem("Meters");
        
        jComboWeight.addItem("--- Measurement Unit ---");
        jComboWeight.addItem("Kilograms");
        jComboWeight.addItem("Pounds");
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jComboHeight = new javax.swing.JComboBox<>();
        jHeight1 = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jHeight2 = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jComboWeight = new javax.swing.JComboBox<>();
        jWeight = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        jReset = new javax.swing.JButton();
        jCompute = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextArea = new javax.swing.JTextArea();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("BMI Calculator");
        setResizable(false);

        jPanel1.setBackground(new java.awt.Color(64, 64, 64));

        jLabel1.setFont(new java.awt.Font("Courier New", 1, 24)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("BMI Calculator");

        jLabel2.setFont(new java.awt.Font("Courier New", 1, 18)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("Height:");

        jComboHeight.setFont(new java.awt.Font("Courier New", 0, 14)); // NOI18N
        jComboHeight.setForeground(new java.awt.Color(211, 210, 215));
        jComboHeight.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboHeightActionPerformed(evt);
            }
        });

        jHeight1.setBackground(new java.awt.Color(211, 210, 215));
        jHeight1.setFont(new java.awt.Font("Courier New", 0, 14)); // NOI18N
        jHeight1.setForeground(new java.awt.Color(0, 0, 0));
        jHeight1.setToolTipText("");
        jHeight1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jHeight1ActionPerformed(evt);
            }
        });

        jLabel4.setFont(new java.awt.Font("Courier New", 0, 10)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setText("jLabel4");

        jHeight2.setBackground(new java.awt.Color(211, 210, 215));
        jHeight2.setFont(new java.awt.Font("Courier New", 0, 14)); // NOI18N
        jHeight2.setForeground(new java.awt.Color(0, 0, 0));

        jLabel5.setFont(new java.awt.Font("Courier New", 0, 10)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(255, 255, 255));
        jLabel5.setText("jLabel5");

        jLabel3.setFont(new java.awt.Font("Courier New", 1, 18)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText("Weight:");

        jComboWeight.setFont(new java.awt.Font("Courier New", 0, 14)); // NOI18N
        jComboWeight.setForeground(new java.awt.Color(211, 210, 215));
        jComboWeight.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboWeightActionPerformed(evt);
            }
        });

        jWeight.setBackground(new java.awt.Color(211, 210, 215));
        jWeight.setFont(new java.awt.Font("Courier New", 0, 14)); // NOI18N
        jWeight.setForeground(new java.awt.Color(0, 0, 0));

        jLabel6.setFont(new java.awt.Font("Courier New", 0, 10)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(255, 255, 255));
        jLabel6.setText("jLabel6");

        jReset.setBackground(new java.awt.Color(45, 84, 160));
        jReset.setFont(new java.awt.Font("Courier New", 1, 14)); // NOI18N
        jReset.setForeground(new java.awt.Color(255, 255, 255));
        jReset.setText("Reset");
        jReset.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jResetActionPerformed(evt);
            }
        });

        jCompute.setBackground(new java.awt.Color(45, 84, 160));
        jCompute.setFont(new java.awt.Font("Courier New", 1, 14)); // NOI18N
        jCompute.setForeground(new java.awt.Color(255, 255, 255));
        jCompute.setText("Compute");
        jCompute.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComputeActionPerformed(evt);
            }
        });

        jTextArea.setBackground(new java.awt.Color(213, 230, 218));
        jTextArea.setColumns(20);
        jTextArea.setFont(new java.awt.Font("Courier New", 0, 12)); // NOI18N
        jTextArea.setForeground(new java.awt.Color(0, 0, 0));
        jTextArea.setRows(5);
        jTextArea.setFocusable(false);
        jScrollPane1.setViewportView(jTextArea);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(52, 52, 52)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jReset)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jCompute, javax.swing.GroupLayout.PREFERRED_SIZE, 205, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel3)
                            .addComponent(jLabel2))
                        .addGap(44, 44, 44)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jComboWeight, 0, 205, Short.MAX_VALUE)
                            .addComponent(jComboHeight, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 16, Short.MAX_VALUE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jHeight2, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jHeight1, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jWeight, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel4)
                            .addComponent(jLabel5)
                            .addComponent(jLabel6))))
                .addGap(42, 42, 42))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addGap(212, 212, 212))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addComponent(jLabel1)
                .addGap(42, 42, 42)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jComboHeight, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jHeight1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jHeight2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5))
                .addGap(17, 17, 17)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(jComboWeight, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jWeight, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6))
                .addGap(20, 20, 20)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jReset, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jCompute, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(35, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jResetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jResetActionPerformed
       jComboHeight.setSelectedIndex(0);
       jHeight1.setText("");
       jLabel4.setVisible(false);
       jHeight2.setText("");
       jLabel5.setVisible(false);
       jComboWeight.setSelectedIndex(0);
       jWeight.setText("");
       jLabel6.setVisible(false);
       jTextArea.setText("\n\nYour BMI is: ");
       jHeight2.requestFocus();
        
    }//GEN-LAST:event_jResetActionPerformed

    private void jComboHeightActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboHeightActionPerformed
        if (jComboHeight.getSelectedItem().equals("--- Measurement Unit ---"))
        {
            
            jHeight1.setEditable(false);
            jLabel4.setVisible(false);
            jHeight2.setVisible(false);
            jLabel5.setVisible(false);
            
        }
            
        else if (jComboHeight.getSelectedItem().equals("Feet + Inches"))
        {
                
            jHeight1.setEditable(true);
            jLabel4.setVisible(true);
            jLabel4.setText("ft.");
            jHeight2.setVisible(true);
            jHeight2.setEditable(true);
            jLabel5.setVisible(true);
            jLabel5.setText("in.");
                
        }
            
        else if (jComboHeight.getSelectedItem().equals("Centimeters"))
        {
                
            jHeight1.setEditable(true);
            jLabel4.setVisible(true);
            jLabel4.setText("cm.");
            jHeight2.setVisible(false);
            jHeight2.setEditable(false);
            jLabel5.setVisible(false);
                
        }
            
        else if (jComboHeight.getSelectedItem().equals("Meters"))
        {
                
            jHeight1.setEditable(true);
            jLabel4.setVisible(true);
            jLabel4.setText("m.");
            jHeight2.setVisible(false);
            jHeight2.setEditable(false);
            jLabel5.setVisible(false);
                
        }
            
    }//GEN-LAST:event_jComboHeightActionPerformed

    private void jComboWeightActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboWeightActionPerformed

        if (jComboWeight.getSelectedItem().equals("--- Measurement Unit ---"))
        {
            
            jWeight.setEditable(false);
            jLabel6.setVisible(false);
            
        }
            
        else if (jComboWeight.getSelectedItem().equals("Kilograms"))
        {
                
            jWeight.setEditable(true);
            jLabel6.setVisible(true);
            jLabel6.setText("kg.");
                
        }
            
        else if (jComboWeight.getSelectedItem().equals("Pounds"))
        {
                
            jWeight.setEditable(true);
            jLabel6.setVisible(true);
            jLabel6.setText("lb.");
                
        }
            
    }//GEN-LAST:event_jComboWeightActionPerformed

    private void jComputeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComputeActionPerformed
        String Height01 = (jHeight1.getText());
        String Height02 = (jHeight2.getText());
        String Weight01 = (jWeight.getText());
        
        double Height1 = Double.parseDouble(Height01);
        double Height2 = Double.parseDouble(Height02);
        double Weight1 = Double.parseDouble(Weight01);
        double Height = 0;
        double Weight = 0;
        double BMI;
        
        String HeightUnit = (String) jComboHeight.getSelectedItem();
        String WeightUnit = (String) jComboWeight.getSelectedItem();
        String Category = "";
        
        // Computation
        try
        {
            if (("Feet + Inches".equals(HeightUnit)) && ("Kilograms".equals(WeightUnit))){
                //Kilogram and (Feet + Inch)
                double feettoinch;
                double feetandinch;
                double inchtometer;
                feettoinch = Height1 * 12;
                feetandinch = feettoinch + Height2;
                inchtometer = feetandinch / 39.37;
            
                Weight = Weight1; // kg
                Height = inchtometer * inchtometer; // m^2
            }
            else if (("Meters".equals(HeightUnit)) && ("Kilograms".equals(WeightUnit))){
                //Kilogram and Meter
                Weight = Weight1; // kg
                Height = Height1 * Height1; // m^2
            }
            else if (("Centimeters".equals(HeightUnit)) && ("Kilograms".equals(WeightUnit))){
                //Kilogram and Centimeter
                double cmtom;
                cmtom = Height1 / 100;
            
                Weight = Weight1; // kg
                Height = cmtom * cmtom; // m^2
            }
            else if (("Feet + Inches".equals(HeightUnit)) && ("Pounds".equals(WeightUnit))){
                //Pound and (Feet + Inch)
                double poundtokilo;
                double feettoinch;
                double feetandinch;
                double inchtometer;
                poundtokilo = Weight1 / 2.205;
                feettoinch = Height1 * 12;
                feetandinch = feettoinch + Height2;
                inchtometer = feetandinch / 39.37;

                Weight = poundtokilo; // kg
                Height = inchtometer * inchtometer; // m^2
            }
            else if (("Meters".equals(HeightUnit)) && ("Pounds".equals(WeightUnit))){
                //Pound and Meter
                double poundtokilo;
                poundtokilo = Weight1 / 2.205;
            
                Weight = poundtokilo; // kg
                Height = Height1 * Height1; // m^2
            }
            else if (("Centimeters".equals(HeightUnit)) && ("Pounds".equals(WeightUnit))){
                //Pound and Meter
                double cmtom;
                double poundtokilo;
                poundtokilo = Weight1 / 2.205;
                cmtom = Height1 / 100;
            
                Weight = poundtokilo; // kg
                Height = cmtom * cmtom; // m^2
            }
        }
        catch(Exception e)
        {
            System.out.print(e);
        }
        
        
        BMI = Weight / Height;
        // BMI Formula: BMI = weight (kg) / height (m^2)
        
        // Category
        if (BMI <= 18.5) {
            Category = "Underweight";
        }
        else if (BMI <= 24.9) {
            Category = "Normal";
        }
        else if (BMI <= 29.9) {
            Category = "Overweight";
        }
        else if (BMI >= 30) {
            Category = "Obese";
        }
        
        jTextArea.setText("");
        jTextArea.append("BMI Categories:");
        jTextArea.append("\nUnderweight ===== <18.5");
        jTextArea.append("\nNormal weight === 18.5 – 24.9");
        jTextArea.append("\nOverweight ====== 25 – 29.9");
        jTextArea.append("\nObesity ========= 30 or greater");
        jTextArea.append("\n__________________________________________________");
        jTextArea.append("\n\nYour BMI is: " + String.format("%.2f", BMI));
        jTextArea.append("\nwhich is considered " + Category + ".");
        
    }//GEN-LAST:event_jComputeActionPerformed

    private void jHeight1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jHeight1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jHeight1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(BMICalculator.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(BMICalculator.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(BMICalculator.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(BMICalculator.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new BMICalculator().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> jComboHeight;
    private javax.swing.JComboBox<String> jComboWeight;
    private javax.swing.JButton jCompute;
    private javax.swing.JTextField jHeight1;
    private javax.swing.JTextField jHeight2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JButton jReset;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextArea jTextArea;
    private javax.swing.JTextField jWeight;
    // End of variables declaration//GEN-END:variables
}